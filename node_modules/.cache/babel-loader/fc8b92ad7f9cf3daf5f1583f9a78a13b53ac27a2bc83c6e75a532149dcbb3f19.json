{"ast":null,"code":"var _jsxFileName = \"C:\\\\FinalYear\\\\test\\\\Learn\\\\frontend\\\\src\\\\components\\\\Calender.js\";\n// src/components/Calendar.js\n\nimport React from 'react';\nimport './Calendar.css'; // Assuming you're using a separate CSS file for calendar styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const month = \"October 2024\"; // Replace with dynamic month\n  const dates = Array.from({\n    length: 30\n  }, (_, i) => i + 1); // Example dates for October\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prev\",\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-year\",\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next\",\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-body\",\n      children: [days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-day\",\n        children: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)), dates.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-date\",\n        children: date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Calendar","days","month","dates","Array","from","length","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","day","index","date","_c","$RefreshReg$"],"sources":["C:/FinalYear/test/Learn/frontend/src/components/Calender.js"],"sourcesContent":["// src/components/Calendar.js\r\n\r\nimport React from 'react';\r\nimport './Calendar.css'; // Assuming you're using a separate CSS file for calendar styles\r\n\r\nconst Calendar = () => {\r\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    const month = \"October 2024\"; // Replace with dynamic month\r\n    const dates = Array.from({ length: 30 }, (_, i) => i + 1); // Example dates for October\r\n\r\n    return (\r\n        <div className=\"calendar-container\">\r\n            <div className=\"calendar-header\">\r\n                <div className=\"prev\">&lt;</div>\r\n                <div className=\"month-year\">{month}</div>\r\n                <div className=\"next\">&gt;</div>\r\n            </div>\r\n            <div className=\"calendar-body\">\r\n                {days.map((day, index) => (\r\n                    <div className=\"calendar-day\" key={index}>\r\n                        {day}\r\n                    </div>\r\n                ))}\r\n                {dates.map((date, index) => (\r\n                    <div className=\"calendar-date\" key={index}>\r\n                        {date}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAC9D,MAAMC,KAAK,GAAG,cAAc,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAE3D,oBACIT,OAAA;IAAKU,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BX,OAAA;MAAKU,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BX,OAAA;QAAKU,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCf,OAAA;QAAKU,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAER;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzCf,OAAA;QAAKU,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACNf,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,GACzBT,IAAI,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACjBlB,OAAA;QAAKU,SAAS,EAAC,cAAc;QAAAC,QAAA,EACxBM;MAAG,GAD2BC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnC,CACR,CAAC,EACDX,KAAK,CAACY,GAAG,CAAC,CAACG,IAAI,EAAED,KAAK,kBACnBlB,OAAA;QAAKU,SAAS,EAAC,eAAe;QAAAC,QAAA,EACzBQ;MAAI,GAD2BD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpC,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACK,EAAA,GA1BInB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}