{"ast":null,"code":"var _jsxFileName = \"C:\\\\FinalYear\\\\test\\\\Learn\\\\frontend\\\\src\\\\components\\\\Carousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Carousel.css'; // Assuming you have CSS for the carousel\nimport img1 from '../images/img1.jpg'; // Import the image from the src/images folder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carousel = () => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slides = [{\n    src: img1,\n    alt: 'Goa Festival Image 1'\n  },\n  // Use the imported image\n  {\n    src: img1,\n    alt: 'Goa Festival Image 2'\n  } // You can replace with another image later\n  ];\n  const nextSlide = () => {\n    setCurrentSlide(prevSlide => prevSlide === slides.length - 1 ? 0 : prevSlide + 1);\n  };\n  const prevSlide = () => {\n    setCurrentSlide(prevSlide => prevSlide === 0 ? slides.length - 1 : prevSlide - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel\",\n      style: {\n        transform: `translateX(-${currentSlide * 100}%)`\n      },\n      children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-slide\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.src,\n          alt: slide.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"carousel-button prev\",\n      onClick: prevSlide,\n      children: \"\\u276E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"carousel-button next\",\n      onClick: nextSlide,\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"VQw0KpRgltXDNPWBgmV3GhZXdQE=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","img1","jsxDEV","_jsxDEV","Carousel","_s","currentSlide","setCurrentSlide","slides","src","alt","nextSlide","prevSlide","length","className","children","style","transform","map","slide","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/FinalYear/test/Learn/frontend/src/components/Carousel.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Carousel.css'; // Assuming you have CSS for the carousel\r\nimport img1 from '../images/img1.jpg'; // Import the image from the src/images folder\r\n\r\nconst Carousel = () => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  const slides = [\r\n    { src: img1, alt: 'Goa Festival Image 1' },  // Use the imported image\r\n    { src: img1, alt: 'Goa Festival Image 2' },  // You can replace with another image later\r\n  ];\r\n\r\n  const nextSlide = () => {\r\n    setCurrentSlide((prevSlide) =>\r\n      prevSlide === slides.length - 1 ? 0 : prevSlide + 1\r\n    );\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrentSlide((prevSlide) =>\r\n      prevSlide === 0 ? slides.length - 1 : prevSlide - 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel-container\">\r\n      <div\r\n        className=\"carousel\"\r\n        style={{ transform: `translateX(-${currentSlide * 100}%)` }}\r\n      >\r\n        {slides.map((slide, index) => (\r\n          <div className=\"carousel-slide\" key={index}>\r\n            <img src={slide.src} alt={slide.alt} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className=\"carousel-button prev\" onClick={prevSlide}>\r\n        ❮\r\n      </button>\r\n      <button className=\"carousel-button next\" onClick={nextSlide}>\r\n        ❯\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB,CAAC,CAAC;AACzB,OAAOC,IAAI,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMQ,MAAM,GAAG,CACb;IAAEC,GAAG,EAAER,IAAI;IAAES,GAAG,EAAE;EAAuB,CAAC;EAAG;EAC7C;IAAED,GAAG,EAAER,IAAI;IAAES,GAAG,EAAE;EAAuB,CAAC,CAAG;EAAA,CAC9C;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBJ,eAAe,CAAEK,SAAS,IACxBA,SAAS,KAAKJ,MAAM,CAACK,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CACpD,CAAC;EACH,CAAC;EAED,MAAMA,SAAS,GAAGA,CAAA,KAAM;IACtBL,eAAe,CAAEK,SAAS,IACxBA,SAAS,KAAK,CAAC,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGD,SAAS,GAAG,CACpD,CAAC;EACH,CAAC;EAED,oBACET,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCZ,OAAA;MACEW,SAAS,EAAC,UAAU;MACpBE,KAAK,EAAE;QAAEC,SAAS,EAAE,eAAeX,YAAY,GAAG,GAAG;MAAK,CAAE;MAAAS,QAAA,EAE3DP,MAAM,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBjB,OAAA;QAAKW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BZ,OAAA;UAAKM,GAAG,EAAEU,KAAK,CAACV,GAAI;UAACC,GAAG,EAAES,KAAK,CAACT;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADJJ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAQW,SAAS,EAAC,sBAAsB;MAACW,OAAO,EAAEb,SAAU;MAAAG,QAAA,EAAC;IAE7D;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA;MAAQW,SAAS,EAAC,sBAAsB;MAACW,OAAO,EAAEd,SAAU;MAAAI,QAAA,EAAC;IAE7D;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CAxCID,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}