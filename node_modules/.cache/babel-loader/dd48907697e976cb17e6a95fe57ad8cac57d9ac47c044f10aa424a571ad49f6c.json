{"ast":null,"code":"var _jsxFileName = \"C:\\\\FinalYear\\\\test\\\\Learn\\\\frontend\\\\src\\\\components\\\\AuthModal.js\",\n  _s = $RefreshSig$();\n// src/components/AuthModal.js\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // Set your app root element\n\nconst AuthModal = ({\n  isOpen,\n  onRequestClose\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isLogin ? 'http://localhost:5000/login' : 'http://localhost:5000/register';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error(isLogin ? 'Invalid credentials' : 'Registration failed');\n      }\n      const data = await response.json();\n      if (isLogin) {\n        localStorage.setItem('token', data.token); // Store the JWT\n        // Redirect or perform actions after login\n      }\n      // Reset form after successful registration\n      setUsername('');\n      setPassword('');\n      onRequestClose(); // Close the modal after submission\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    contentLabel: \"Authentication Modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLogin(!isLogin),\n      children: isLogin ? 'Switch to Register' : 'Switch to Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRequestClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthModal, \"FzAlotZVPcxhMzI3BfFc04coFJs=\");\n_c = AuthModal;\nexport default AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","setAppElement","AuthModal","isOpen","onRequestClose","_s","isLogin","setIsLogin","username","setUsername","password","setPassword","error","setError","handleSubmit","e","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","localStorage","setItem","token","message","contentLabel","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/FinalYear/test/Learn/frontend/src/components/AuthModal.js"],"sourcesContent":["// src/components/AuthModal.js\r\nimport React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root'); // Set your app root element\r\n\r\nconst AuthModal = ({ isOpen, onRequestClose }) => {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const url = isLogin ? 'http://localhost:5000/login' : 'http://localhost:5000/register';\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(isLogin ? 'Invalid credentials' : 'Registration failed');\r\n            }\r\n\r\n            const data = await response.json();\r\n            if (isLogin) {\r\n                localStorage.setItem('token', data.token); // Store the JWT\r\n                // Redirect or perform actions after login\r\n            }\r\n            // Reset form after successful registration\r\n            setUsername('');\r\n            setPassword('');\r\n            onRequestClose(); // Close the modal after submission\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onRequestClose={onRequestClose} contentLabel=\"Authentication Modal\">\r\n            <h2>{isLogin ? 'Login' : 'Register'}</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n            </form>\r\n            <button onClick={() => setIsLogin(!isLogin)}>\r\n                {isLogin ? 'Switch to Register' : 'Switch to Login'}\r\n            </button>\r\n            <button onClick={onRequestClose}>Close</button>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AuthModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}