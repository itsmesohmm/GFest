{"ast":null,"code":"var _jsxFileName = \"C:\\\\FinalYear\\\\test\\\\Learn\\\\frontend\\\\src\\\\components\\\\AuthModal.js\",\n  _s = $RefreshSig$();\n// src/components/AuthModal.js\nimport React, { useState } from 'react';\nimport './AuthModal.css'; // Ensure you have the styles imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // State to toggle between login and signup\n\n  if (!isOpen) return null; // Don't render if modal is not open\n\n  const handleToggle = () => {\n    setIsLogin(!isLogin); // Toggle between login and signup\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), !isLogin &&\n        /*#__PURE__*/\n        // Show this field only on signup\n        _jsxDEV(\"label\", {\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-button\",\n        onClick: handleToggle,\n        children: isLogin ? 'Need an account? Sign Up' : 'Already have an account? Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthModal, \"juHMKC6x2j1wnRvCiB5VrABnZyE=\");\n_c = AuthModal;\nexport default AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthModal","isOpen","onClose","_s","isLogin","setIsLogin","handleToggle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","required","onClick","_c","$RefreshReg$"],"sources":["C:/FinalYear/test/Learn/frontend/src/components/AuthModal.js"],"sourcesContent":["// src/components/AuthModal.js\r\nimport React, { useState } from 'react';\r\nimport './AuthModal.css'; // Ensure you have the styles imported\r\n\r\nconst AuthModal = ({ isOpen, onClose }) => {\r\n  const [isLogin, setIsLogin] = useState(true); // State to toggle between login and signup\r\n\r\n  if (!isOpen) return null; // Don't render if modal is not open\r\n\r\n  const handleToggle = () => {\r\n    setIsLogin(!isLogin); // Toggle between login and signup\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2>{isLogin ? 'Login' : 'Sign Up'}</h2>\r\n        \r\n        <form>\r\n          <label>\r\n            Email:\r\n            <input type=\"email\" required />\r\n          </label>\r\n          <label>\r\n            Password:\r\n            <input type=\"password\" required />\r\n          </label>\r\n          {!isLogin && ( // Show this field only on signup\r\n            <label>\r\n              Confirm Password:\r\n              <input type=\"password\" required />\r\n            </label>\r\n          )}\r\n          <button type=\"submit\">{isLogin ? 'Login' : 'Sign Up'}</button>\r\n        </form>\r\n\r\n        <button className=\"toggle-button\" onClick={handleToggle}>\r\n          {isLogin ? 'Need an account? Sign Up' : 'Already have an account? Login'}\r\n        </button>\r\n        <button onClick={onClose} className=\"close-button\">Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthModal;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C,IAAI,CAACI,MAAM,EAAE,OAAO,IAAI,CAAC,CAAC;;EAE1B,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzBD,UAAU,CAAC,CAACD,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BT,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BT,OAAA;QAAAS,QAAA,EAAKJ,OAAO,GAAG,OAAO,GAAG;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAExCb,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,GAAO,QAEL,eAAAT,OAAA;YAAOc,IAAI,EAAC,OAAO;YAACC,QAAQ;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACRb,OAAA;UAAAS,QAAA,GAAO,WAEL,eAAAT,OAAA;YAAOc,IAAI,EAAC,UAAU;YAACC,QAAQ;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,EACP,CAACR,OAAO;QAAA;QAAM;QACbL,OAAA;UAAAS,QAAA,GAAO,mBAEL,eAAAT,OAAA;YAAOc,IAAI,EAAC,UAAU;YAACC,QAAQ;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CACR,eACDb,OAAA;UAAQc,IAAI,EAAC,QAAQ;UAAAL,QAAA,EAAEJ,OAAO,GAAG,OAAO,GAAG;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eAEPb,OAAA;QAAQQ,SAAS,EAAC,eAAe;QAACQ,OAAO,EAAET,YAAa;QAAAE,QAAA,EACrDJ,OAAO,GAAG,0BAA0B,GAAG;MAAgC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACTb,OAAA;QAAQgB,OAAO,EAAEb,OAAQ;QAACK,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAvCIH,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}