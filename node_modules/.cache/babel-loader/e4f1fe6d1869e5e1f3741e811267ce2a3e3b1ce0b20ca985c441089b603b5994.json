{"ast":null,"code":"var _jsxFileName = \"C:\\\\FinalYear\\\\test\\\\Learn\\\\frontend\\\\src\\\\pages\\\\ArtisanDashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/ArtisanDashboard.js\nimport React, { useState } from 'react';\nimport './Dashboard.css'; // Import common dashboard CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtisanDashboard = () => {\n  _s();\n  const [services, setServices] = useState([]); // State to hold services\n  const [newService, setNewService] = useState({\n    name: '',\n    description: ''\n  }); // State for new service\n  const [editingServiceId, setEditingServiceId] = useState(null); // State to track the service being edited\n\n  // Handle service submission\n  const handleAddService = e => {\n    e.preventDefault();\n\n    // Create or update service based on whether editing\n    if (editingServiceId) {\n      setServices(services.map(service => service.id === editingServiceId ? {\n        id: editingServiceId,\n        ...newService\n      } : service));\n      setEditingServiceId(null); // Reset editing state\n    } else {\n      const serviceWithId = {\n        id: services.length + 1,\n        ...newService\n      }; // Add new service with ID\n      setServices([...services, serviceWithId]);\n    }\n\n    // Reset form fields\n    setNewService({\n      name: '',\n      description: ''\n    });\n  };\n\n  // Handle service edit\n  const handleEditService = service => {\n    setNewService({\n      name: service.name,\n      description: service.description\n    });\n    setEditingServiceId(service.id); // Set the editing service ID\n  };\n\n  // Handle service deletion\n  const handleDeleteService = serviceId => {\n    setServices(services.filter(service => service.id !== serviceId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Artisan Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-service-form\",\n      onSubmit: handleAddService,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Service Name\",\n        value: newService.name,\n        onChange: e => setNewService({\n          ...newService,\n          name: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Service Description\",\n        value: newService.description,\n        onChange: e => setNewService({\n          ...newService,\n          description: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingServiceId ? 'Update Service' : 'Add Service'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"service-list\",\n      children: services.length > 0 ? services.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [service.name, \" - \", service.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditService(service),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteService(service.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, service.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No services available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtisanDashboard, \"okc4GH1RJ81Pab6OKb03XtvfC6A=\");\n_c = ArtisanDashboard;\nexport default ArtisanDashboard;\nvar _c;\n$RefreshReg$(_c, \"ArtisanDashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ArtisanDashboard","_s","services","setServices","newService","setNewService","name","description","editingServiceId","setEditingServiceId","handleAddService","e","preventDefault","map","service","id","serviceWithId","length","handleEditService","handleDeleteService","serviceId","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/FinalYear/test/Learn/frontend/src/pages/ArtisanDashboard.js"],"sourcesContent":["// src/pages/ArtisanDashboard.js\r\nimport React, { useState } from 'react';\r\nimport './Dashboard.css'; // Import common dashboard CSS\r\n\r\nconst ArtisanDashboard = () => {\r\n  const [services, setServices] = useState([]); // State to hold services\r\n  const [newService, setNewService] = useState({ name: '', description: '' }); // State for new service\r\n  const [editingServiceId, setEditingServiceId] = useState(null); // State to track the service being edited\r\n\r\n  // Handle service submission\r\n  const handleAddService = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create or update service based on whether editing\r\n    if (editingServiceId) {\r\n      setServices(services.map(service => \r\n        service.id === editingServiceId ? { id: editingServiceId, ...newService } : service\r\n      ));\r\n      setEditingServiceId(null); // Reset editing state\r\n    } else {\r\n      const serviceWithId = { id: services.length + 1, ...newService }; // Add new service with ID\r\n      setServices([...services, serviceWithId]);\r\n    }\r\n\r\n    // Reset form fields\r\n    setNewService({ name: '', description: '' });\r\n  };\r\n\r\n  // Handle service edit\r\n  const handleEditService = (service) => {\r\n    setNewService({ name: service.name, description: service.description });\r\n    setEditingServiceId(service.id); // Set the editing service ID\r\n  };\r\n\r\n  // Handle service deletion\r\n  const handleDeleteService = (serviceId) => {\r\n    setServices(services.filter(service => service.id !== serviceId));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Artisan Dashboard</h1>\r\n      <h2>Manage Services</h2>\r\n\r\n      {/* Add/Edit Service Form */}\r\n      <form className=\"add-service-form\" onSubmit={handleAddService}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Service Name\"\r\n          value={newService.name}\r\n          onChange={(e) => setNewService({ ...newService, name: e.target.value })}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Service Description\"\r\n          value={newService.description}\r\n          onChange={(e) => setNewService({ ...newService, description: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">{editingServiceId ? 'Update Service' : 'Add Service'}</button>\r\n      </form>\r\n\r\n      {/* Display Services */}\r\n      <ul className=\"service-list\">\r\n        {services.length > 0 ? (\r\n          services.map((service) => (\r\n            <li key={service.id}>\r\n              {service.name} - {service.description}\r\n              <button onClick={() => handleEditService(service)}>Edit</button>\r\n              <button onClick={() => handleDeleteService(service.id)}>Delete</button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No services available.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtisanDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}